```mermaid
graph TB
  %% Environment Boundary
  subgraph "{ENVIRONMENT} Environment - {PROVIDER}"
    %% Load Balancers
    LB["{Load Balancer}<br/>{Technology}"]

    %% Application Servers
    APP1["{App Server 1}<br/>{Technology Stack}"]
    APP2["{App Server 2}<br/>{Technology Stack}"]

    %% Databases
    DB[("{Database}<br/>{Technology + Version}")]
    DB_REPLICA[("{Database Replica}<br/>{Technology + Version}")]

    %% Caches
    CACHE[("{Cache}<br/>{Technology + Version}")]

    %% Message Queues
    QUEUE["{Queue}<br/>{Technology}"]
  end

  %% External
  Internet[Internet] -->|HTTPS:443| LB

  %% Internal Connections
  LB -->|HTTP:3000| APP1
  LB -->|HTTP:3000| APP2

  APP1 --> DB
  APP1 --> DB_REPLICA
  APP2 --> DB
  APP2 --> DB_REPLICA

  APP1 --> CACHE
  APP2 --> CACHE

  APP1 --> QUEUE
  APP2 --> QUEUE

  DB -.->|Replication| DB_REPLICA

  %% Styling
  style LB fill:#4CAF50
  style APP1 fill:#2196F3
  style APP2 fill:#2196F3
  style DB fill:#FF9800
  style DB_REPLICA fill:#FF9800
  style CACHE fill:#F44336
  style QUEUE fill:#9C27B0
```

## Deployment Diagram Template

### Purpose
Show infrastructure and deployment architecture.

### When to Use
- Infrastructure planning
- DevOps documentation
- Understanding production setup

### File Location
```
.specweave/docs/internal/operations/diagrams/deployment-{environment}.mmd
```

### Instructions

1. **Replace Placeholders**:
   - `{ENVIRONMENT}` - Production, Staging, Development
   - `{PROVIDER}` - Hetzner Cloud, AWS, Azure, GCP
   - `{Load Balancer}` - HAProxy, Nginx, AWS ALB
   - `{App Server 1}` - App Server name/ID
   - `{Technology Stack}` - Node.js + Next.js, Python + Django
   - `{Database}` - PostgreSQL, MySQL, MongoDB
   - `{Technology + Version}` - PostgreSQL 15, Redis 7, MongoDB 6
   - `{Cache}` - Redis, Memcached
   - `{Queue}` - RabbitMQ, Apache Kafka, AWS SQS

2. **Add More Nodes**:
   ```
   WORKER1[Background Worker 1<br/>Node.js]
   WORKER2[Background Worker 2<br/>Node.js]
   S3[(Object Storage<br/>S3 / R2)]
   ```

3. **Add Ports**:
   ```
   LB -->|HTTP:8080| APP1
   DB -->|PostgreSQL:5432| APP1
   ```

4. **Add Replication/Redundancy**:
   ```
   DB -.->|Streaming Replication| DB_REPLICA
   CACHE1 -.->|Cluster| CACHE2
   ```

5. **Color Coding** (optional):
   ```
   style LB fill:#4CAF50         # Green for load balancers
   style APP1 fill:#2196F3       # Blue for app servers
   style DB fill:#FF9800         # Orange for databases
   style CACHE fill:#F44336      # Red for caches
   style QUEUE fill:#9C27B0      # Purple for queues
   ```

### Best Practices
- **Show environment** - Production, Staging, Dev
- **Indicate technologies** - PostgreSQL 15, Node.js 20, Redis 7
- **Show ports** - HTTPS:443, HTTP:3000, PostgreSQL:5432
- **Use colors** - Different colors for different tiers
- **Show redundancy** - Load balancers, replicas, failover
- **Indicate data flow** - Solid lines (traffic), dotted lines (replication)
- **Add scaling info** - Number of instances, auto-scaling groups

### Naming Convention
Save as: `deployment-{environment}.mmd`

Examples:
- `deployment-production.mmd`
- `deployment-staging.mmd`
- `deployment-development.mmd`

### File Location
```
.specweave/docs/internal/operations/diagrams/deployment-production.mmd
```

### Common Patterns

**Multi-tier architecture**:
```
Internet → Load Balancer → App Servers → Database
```

**Microservices**:
```
Internet → API Gateway → Service Mesh (Auth, Orders, Payments) → Databases
```

**Serverless**:
```
Internet → CDN → Serverless Functions → Managed Databases
```
