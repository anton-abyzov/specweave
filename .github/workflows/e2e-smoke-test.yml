name: SpecWeave E2E Smoke Test

on:
  push:
    branches: [main, features/*]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      timeout:
        description: 'Generation timeout (seconds)'
        required: false
        default: '120'

jobs:
  smoke-test:
    name: E2E Smoke Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout SpecWeave
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install SpecWeave Dependencies
        run: npm install

      - name: Build SpecWeave
        run: npm run build

      - name: Make Smoke Test Executable
        run: chmod +x tests/smoke/e2e-smoke-test.sh

      - name: Run E2E Smoke Test
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: ./tests/smoke/e2e-smoke-test.sh

      - name: Upload Test Results on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-failure-${{ github.run_number }}
          path: |
            /tmp/specweave-smoke-*/
            !/**/node_modules/
          retention-days: 7

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `E2E Smoke Test Failed - Run #${context.runNumber}`,
              body: `The E2E smoke test failed on ${context.ref}.

              **Run Details:**
              - Workflow: ${context.workflow}
              - Run ID: ${context.runId}
              - Commit: ${context.sha}

              Check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.

              Artifacts with failure details have been uploaded.`,
              labels: ['bug', 'e2e-test', 'ci-failure']
            })

  smoke-test-matrix:
    name: E2E Smoke Test (Multiple Scenarios)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        scenario:
          - name: "Simple Todo App"
            prompt: "Create a todo app with Next.js and local storage"
            expected_features: ["todo", "next.js", "storage"]

          - name: "SaaS Event Management"
            prompt: "implement a SaaS solution with Next.js for event management, specifically a field facility booking system for soccer. Include backend API, deploy to Hetzner cloud, and integrate Stripe payments. Time slots should only be bookable once payment is confirmed."
            expected_features: ["event management", "stripe", "hetzner", "booking"]

          - name: "E-commerce Platform"
            prompt: "Build an e-commerce platform with Next.js, Stripe payments, product catalog, and admin dashboard. Deploy to Vercel."
            expected_features: ["e-commerce", "stripe", "product", "admin"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Create Test Directory
        run: |
          TEST_DIR="/tmp/specweave-test-${{ matrix.scenario.name }}"
          mkdir -p "$TEST_DIR"
          echo "TEST_DIR=$TEST_DIR" >> $GITHUB_ENV

      - name: Initialize SpecWeave
        working-directory: ${{ env.TEST_DIR }}
        run: npx specweave init

      - name: Generate Project
        working-directory: ${{ env.TEST_DIR }}
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "${{ matrix.scenario.prompt }}" | npx specweave create --wait

      - name: Verify Structure
        working-directory: ${{ env.TEST_DIR }}
        run: |
          # Check directories
          test -d .specweave
          test -d specifications
          test -d features
          test -d src
          test -d tests/e2e

      - name: Verify Content
        working-directory: ${{ env.TEST_DIR }}
        run: |
          # Check specifications mention expected features
          for feature in ${{ join(matrix.scenario.expected_features, ' ') }}; do
            grep -rqi "$feature" specifications/ || {
              echo "Expected feature not found: $feature"
              exit 1
            }
          done

      - name: Run Tests
        working-directory: ${{ env.TEST_DIR }}
        run: |
          npm install
          npm test

      - name: Build Project
        working-directory: ${{ env.TEST_DIR }}
        run: npm run build

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-project-${{ matrix.scenario.name }}-${{ github.run_number }}
          path: |
            ${{ env.TEST_DIR }}
            !${{ env.TEST_DIR }}/node_modules
          retention-days: 3

  performance-benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    needs: smoke-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Benchmark Generation Time
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          START=$(date +%s)

          ./tests/smoke/e2e-smoke-test.sh

          END=$(date +%s)
          DURATION=$((END - START))

          echo "Generation completed in $DURATION seconds"
          echo "generation_time=$DURATION" >> $GITHUB_OUTPUT

      - name: Compare with Baseline
        run: |
          BASELINE=300  # 5 minutes baseline
          ACTUAL=${{ steps.benchmark.outputs.generation_time }}

          if [ "$ACTUAL" -gt "$BASELINE" ]; then
            echo "⚠️ Generation time ($ACTUAL s) exceeded baseline ($BASELINE s)"
            exit 1
          else
            echo "✓ Generation time within baseline"
          fi

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [smoke-test, smoke-test-matrix, performance-benchmark]
    if: success()

    steps:
      - name: Notify on Success
        run: |
          echo "✅ All E2E smoke tests passed!"
          echo "All scenarios validated successfully."
