# {{PROJECT_NAME}}

**A SpecWeave project** - where specifications drive development.

## 🚀 Quick Start

Your project is initialized! Now describe what you want to build.

### Next Steps

1. **Open your AI assistant** (Claude Code, Cursor, Windsurf, or any AI-powered IDE)

2. **Use SpecWeave slash commands** to start building:

```bash
# Plan a new feature
/inc "user authentication with JWT"

# Execute the implementation
/do

# Check progress
/progress

# Close when done
/done 0001
```

3. **Or describe your project** in natural language (works with slash command workflows):

```
"Build a real estate listing platform with search, images, and admin dashboard"
"Create a task management API with authentication"
"Build an e-commerce platform with Stripe payments"
```

4. **SpecWeave will automatically**:
   - Detect your tech stack (or ask you to choose)
   - Use the right agents & skills (all pre-installed!)
   - Create strategic documentation
   - Generate specifications (spec.md, plan.md, tasks.md)
   - Guide implementation
   - Generate tests

That's it! All components ready - just use `/inc` to start!

---

## 📁 Project Structure

```
{{PROJECT_NAME}}/
├── .specweave/             # SpecWeave framework
│   ├── increments/         # Features (created via /inc)
│   │   └── 0001-feature/
│   │       ├── spec.md     # WHAT & WHY
│   │       ├── plan.md     # HOW
│   │       ├── tasks.md    # Implementation steps
│   │       ├── tests.md    # Test strategy
│   │       ├── logs/       # Execution logs
│   │       ├── scripts/    # Helper scripts
│   │       └── reports/    # Analysis reports
│   ├── docs/               # Strategic documentation
│   │   ├── internal/       # Internal docs (strategy, architecture)
│   │   └── public/         # Published docs
│   └── tests/              # Centralized test repository
├── .claude/                # Claude Code integration (optional)
│   ├── commands/           # Slash commands (10 installed)
│   ├── agents/             # AI agents (10 installed)
│   └── skills/             # AI skills (35+ installed)
├── CLAUDE.md               # Instructions for AI assistant
└── README.md               # This file
```

---

## 🎯 What is SpecWeave?

SpecWeave is a specification-first development framework where:
- **Specifications are the source of truth** (code follows specs, not reverse)
- **Slash commands drive workflow** (`/inc` → `/do` → `/done`)
- **AI agents work autonomously** (PM, Architect, Security, QA, DevOps)
- **All components pre-installed** (10 agents + 35+ skills ready!)
- **Works with ANY tech stack** (TypeScript, Python, Go, Rust, Java, .NET, etc.)
- **Works with multiple AI assistants** (Claude Code, Cursor, Windsurf, etc.)

---

## 🔧 Core Workflow

```
/inc "feature" → /do → /progress → /done → repeat
```

| Command | Purpose | When to Use |
|---------|---------|-------------|
| `/inc "feature"` | Plan new increment | Starting new feature |
| `/do` | Execute tasks | Ready to implement |
| `/progress` | Check status | Want to see progress |
| `/validate 0001` | Validate quality | Before completion |
| `/done 0001` | Close increment | Feature finished |
| `/sync-github` | Sync to GitHub | Export to issues |
| `/sync-jira` | Sync to Jira | Export to Jira |

See `CLAUDE.md` for complete workflow guide.

---

## 🚨 File Organization

**Keep project root clean!** All AI-generated files go into increment folders:

```
✅ CORRECT:
.specweave/increments/0001-auth/
├── logs/execution.log
├── scripts/migration.sql
└── reports/analysis.md

❌ WRONG:
project-root/
├── execution.log        # NO!
├── migration.sql        # NO!
└── analysis.md          # NO!
```

---

## 🤖 AI Assistant Compatibility

SpecWeave works with:
- ✅ **Claude Code** (recommended) - Full slash command support
- ✅ **Cursor** - Slash commands via composer
- ✅ **Windsurf** - Cascade mode compatible
- ✅ **ChatGPT** - Via custom instructions
- ✅ **Any AI IDE** - As long as it supports slash commands or custom prompts

**Setup**: See `CLAUDE.md` for AI assistant instructions.

---

## 📚 Learn More

- **Documentation**: https://spec-weave.com
- **GitHub**: https://github.com/anton-abyzov/specweave
- **Quick Reference**: See `CLAUDE.md` in your project
- **Examples**: Check `.specweave/docs/` after creating your first increment

---

## 🏁 Ready to Build?

**Start with your first feature**:
```bash
/inc "describe your feature here"
```

Or just describe what you want to build, and SpecWeave will guide you through the process! 🚀

---

**Documentation Philosophy**: {{DOCUMENTATION_APPROACH}}

**Tech Stack**: Auto-detected from project files (package.json, requirements.txt, etc.)
