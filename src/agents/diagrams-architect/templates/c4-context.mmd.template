```mermaid
C4Context
  title System Context for {SYSTEM_NAME}

  %% Human Actors
  Person(user1, "{Actor Name}", "{Actor Description}")

  %% Your System
  System(system, "{SYSTEM_NAME}", "{System Description}")

  %% External Systems
  System_Ext(external1, "{External System}", "{External System Description}")

  %% Relationships
  Rel(user1, system, "{Interaction Description}", "{Protocol if relevant}")
  Rel(system, external1, "{Interaction Description}", "{Protocol}")
```

## C4 Level 1: Context Diagram Template

### Purpose
High-level view showing system boundaries and external actors.

### When to Use
- New project overview
- Stakeholder presentations
- Understanding external dependencies

### Instructions

1. **Replace Placeholders**:
   - `{SYSTEM_NAME}` - Your system name (e.g., "E-Commerce Platform")
   - `{Actor Name}` - Human users (e.g., "Customer", "Administrator")
   - `{Actor Description}` - What the actor does
   - `{External System}` - External services (e.g., "Stripe", "SendGrid")
   - `{Interaction Description}` - What flows between actors/systems
   - `{Protocol}` - HTTPS, REST, SMTP, etc.

2. **Add More Elements** as needed:
   ```
   Person(admin, "Administrator", "Manages system")
   System_Ext(analytics, "Google Analytics", "Usage tracking")
   ```

3. **Add More Relationships**:
   ```
   Rel(admin, system, "Configures", "HTTPS")
   Rel(system, analytics, "Tracks events", "HTTPS")
   ```

### Best Practices
- Keep to 5-10 elements maximum
- Use business language (not technical details)
- Show boundaries clearly (internal vs external)
- Focus on WHAT, not HOW

### Example
See: `.specweave/docs/internal/architecture/diagrams/system-context.mmd`
