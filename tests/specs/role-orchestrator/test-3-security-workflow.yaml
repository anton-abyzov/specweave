---
name: "Security Hardening Multi-Agent Workflow"
description: "Tests role-orchestrator's ability to coordinate security review with multiple agents"
priority: P1
test_type: integration

input:
  prompt: "Perform security audit and harden our authentication system"
  project_context:
    type: "brownfield"
    existing_system: "src/auth/"
    security_critical: true
    compliance_required: ["OWASP Top 10", "OAuth 2.0"]

expected_behavior:
  - orchestrator_pattern: "assess_fix_verify"

  - execution_phases:
      - phase: 1
        name: "Security Assessment"
        agent: "security-agent"
        task: "Threat modeling and security audit"
        output_files:
          - ".specweave/docs/architecture/security/threat-model.md"
          - ".specweave/docs/architecture/security/vulnerabilities.md"
        findings:
          critical:
            - "SQL injection vulnerability in login endpoint"
            - "Missing rate limiting on password reset"
          high:
            - "Weak password policy"
            - "Session tokens not rotated"
          medium:
            - "HTTPS not enforced on all routes"

      - phase: 2
        name: "Prioritization"
        agent: "tech-lead-agent"
        input_from: "security-agent"
        task: "Create prioritized fix plan"
        output_files:
          - "work/issues/001-critical-security-fixes/issue.md"
          - "work/issues/002-high-priority-security/issue.md"

      - phase: 3
        name: "Implementation"
        agents: ["nodejs-backend"]  # Since auth is Node.js
        task: "Implement security fixes"
        fixes_implemented:
          - "Parameterized queries for SQL injection"
          - "Rate limiting middleware (express-rate-limit)"
          - "Enhanced password policy (zxcvbn)"
          - "Session token rotation"
          - "HTTPS enforcement"
        output_files:
          - "src/auth/auth-service.ts"  # Updated
          - "src/middleware/rate-limiter.ts"  # New
          - "src/auth/password-policy.ts"  # New

      - phase: 4
        name: "Security Testing"
        agent: "security-agent"
        task: "Penetration testing"
        tests_performed:
          - "SQL injection attempts"
          - "Brute force attacks"
          - "Session hijacking"
          - "CSRF attacks"
        gate: "no_critical_vulnerabilities"

      - phase: 5
        name: "Regression Testing"
        agent: "qa-lead-agent"
        task: "Ensure no functionality broken"
        output_files:
          - "tests/security/auth-security.spec.ts"
        gate: "all_tests_pass"

      - phase: 6
        name: "Deployment"
        agent: "devops-agent"
        task: "Zero-downtime deployment with rollback plan"
        strategy: "blue-green"
        gate: "deployment_approval"

expected_output:
  success: true
  vulnerabilities_fixed:
    critical: 2
    high: 2
    medium: 1

  security_gates_passed:
    - "no_critical_vulnerabilities"
    - "penetration_tests_passed"
    - "regression_tests_passed"

  files_created:
    - ".specweave/docs/architecture/security/threat-model.md"
    - "work/issues/001-critical-security-fixes/issue.md"
    - "src/middleware/rate-limiter.ts"
    - "tests/security/auth-security.spec.ts"

  deployment_status: "successful"
  rollback_plan: "documented"

validation:
  - "Security agent performed comprehensive audit"
  - "Critical vulnerabilities prioritized first"
  - "All fixes implemented by appropriate agent"
  - "Penetration testing validated fixes"
  - "No regressions introduced"
  - "Deployment successful with rollback plan"

success_criteria:
  - all_critical_vulns_fixed: true
  - penetration_tests_passed: true
  - no_regressions: true
  - deployment_successful: true
  - compliance_met: ["OWASP Top 10", "OAuth 2.0"]
---
